<?phpfunction check_php_mysql_versions( ) {	global $php_version;	$curr_php_version = phpversion();		if ( version_compare( $php_version, $curr_php_version, '>' ) ) {		qrgen_die( sprintf( 'Your server is running PHP version %1$s but QR Manager %2$s requires at least %3$s.' , $curr_php_version, QRGEN_VERSION, $php_version ) );	}		if ( ! extension_loaded( 'mysql' )) {		qrgen_die( 'Your PHP installation is missing the MySQL extension which is required by QR Manager.' );	}}function require_qrgen_db() {	global $qrdb;		require_once( ABSPATH .  'includes/sql_pdo.php' );	if ( isset( $qrdb ) )		return;	$qrdb = new ezSQL_pdo;	$qrdb->hide_errors();	$qrdb->connect( QRGEN_DB_DSN, QRGEN_DB_USER, QRGEN_DB_PASS );}function qrgen_install( $qrgen_title, $user_name, $admin_email, $admin_password ) {	global $qrdb;		if( $err = $qrdb->check_database_version()) 		qrgen_die( $err );			if( !file_exists( QRGEN_ABSPATH.'/.htaccess' ) ) {		if( qrgen_create_htaccess()) 			echo 'File <code>.htaccess</code> successfully created/updated.' ;		 else 			echo 'Could not write file <code>.htaccess</code> in QRGEN root directory. You will have to do it manually. See <a href="http://techlister.com/">how</a>.' ;	}		$user_data = qrgen_create_tables( $qrgen_title, $user_name, $admin_email, $admin_password );	return $user_data;}function qrgen_create_tables( $qrgen_title, $user_name, $admin_email, $admin_password ) {	global $qrdb;		require_once( QRGEN_INC . '/db.php' );		$tables = get_qrgen_tables( QRGEN_DB_PREFIX );		$error_msg = array();	$success_msg = array();		$create_table_count = 0;	$qrdb->show_errors();		foreach ( $tables as $table_name => $table_query ) {		$qrdb->query( $table_query );		$success = $qrdb->query( "SHOW TABLES LIKE '$table_name'" );		if( $success ) {			$create_table_count++;			echo sprintf( "<p>Table '%s' created.</p>", $table_name ); 		} else {			echo sprintf( "<p>Error creating table '%s'.</p>", $table_name); 		}	}		update_option( 'siteurl', QRGEN_SITE );	update_option( 'site_title', $qrgen_title );	update_option( 'admin_email', $admin_email );	update_option( 'version', QRGEN_VERSION );	update_option( 'next_id', 1 );		if( ! $qrdb->login_exists(  $user_name )) 		$qrdb->process_registration( $user_name, $admin_email, $admin_password, $admin_password, 1 );	else {		$pass = $qrdb->encrypt( $admin_password, $user_name );			$sql = "UPDATE " . QRGEN_PREFIX . "user SET user_pass='" . $qrdb->escape( $pass ) . "' WHERE user_login='" . $qrdb->escape( $user_name ) . "'";		$qrdb->query( $sql );	}	return array( 'user' => $user_name, "pass" => $admin_password );}		function qrgen_create_htaccess() {	$host = parse_url( QRGEN_SITE );	$path = ( isset( $host['path'] ) ? $host['path'] : '' );	    if ( qrgen_is_iis()) {		// Prepare content for a web.config file	    $content = array(		'<?xml version="1.0" encoding="UTF-8"?>',		'<configuration>', 		'    <system.webServer>',		'        <rewrite>',		'            <rules>',		'                <rule name="QRGEN" stopProcessing="true">',		'                    <match url="^(.*)$" ignoreCase="false" />',		'                    <conditions>',		'                        <add input="{REQUEST_FILENAME}" matchType="IsFile" ignoreCase="false" negate="true" />',		'                        <add input="{REQUEST_FILENAME}" matchType="IsDirectory" ignoreCase="false" negate="true" />',		'                    </conditions>',		'                    <action type="Rewrite" url="'.$path.'/qr-redir.php" appendQueryString="true" />',		'                </rule>',		'            </rules>',		'        </rewrite>',		'    </system.webServer>',		'</configuration>',	    );			    $filename = QRGEN_ABSPATH.'/web.config';		$marker = 'none';		    } else {		// Prepare content for a .htaccess file	    $content = array(		'<Files *code*.png>',		'ForceType application/octet-stream',		'</Files>',		'<IfModule mod_rewrite.c>',		'RewriteEngine On',		'RewriteBase '.$path.'/',		'RewriteCond %{REQUEST_FILENAME} !-f',		'RewriteCond %{REQUEST_FILENAME} !-d',		'RewriteRule ^.*$ '.$path.'/qr-redir.php [L]',		'</IfModule>',	    );			    $filename = QRGEN_ABSPATH.'/.htaccess';		$marker = 'QRGEN';			}		return ( qrgen_insert_with_markers( $filename, $marker, $content ) );}function qrgen_is_iis() {	return ( strpos( $_SERVER['SERVER_SOFTWARE'], 'IIS' ) !== false );}function qrgen_insert_with_markers( $filename, $marker, $insertion ) {	if ( !file_exists( $filename ) || is_writeable( $filename ) ) {		if ( !file_exists( $filename ) ) {			$markerdata = '';		} else {			$markerdata = explode( "\n", implode( '', file( $filename ) ) );		}				if ( !$f = @fopen( $filename, 'w' ) )		return false;				$foundit = false;		if ( $markerdata ) {			$state = true;			foreach ( $markerdata as $n => $markerline ) {				if ( strpos( $markerline, '# BEGIN ' . $marker ) !== false )				$state = false;				if ( $state ) {					if ( $n + 1 < count( $markerdata ) )					fwrite( $f, "{$markerline}\n" );					else					fwrite( $f, "{$markerline}" );				}				if ( strpos( $markerline, '# END ' . $marker ) !== false ) {					if ( $marker != 'none' )					fwrite( $f, "# BEGIN {$marker}\n" );					if ( is_array( $insertion ) )					foreach ( $insertion as $insertline )					fwrite( $f, "{$insertline}\n" );					if ( $marker != 'none' )					fwrite( $f, "# END {$marker}\n" );					$state = true;					$foundit = true;				}			}		}		if ( !$foundit ) {			if ( $marker != 'none' )			fwrite( $f, "\n\n# BEGIN {$marker}\n" );			foreach ( $insertion as $insertline )			fwrite( $f, "{$insertline}\n" );			if ( $marker != 'none' )			fwrite( $f, "# END {$marker}\n\n" );		}		fclose( $f );		return true;	} else {		return false;	}}